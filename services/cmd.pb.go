// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cmd.proto

package services

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EmptyReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyReq) Reset()         { *m = EmptyReq{} }
func (m *EmptyReq) String() string { return proto.CompactTextString(m) }
func (*EmptyReq) ProtoMessage()    {}
func (*EmptyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_7520252fb01eaf30, []int{0}
}

func (m *EmptyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyReq.Unmarshal(m, b)
}
func (m *EmptyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyReq.Marshal(b, m, deterministic)
}
func (m *EmptyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyReq.Merge(m, src)
}
func (m *EmptyReq) XXX_Size() int {
	return xxx_messageInfo_EmptyReq.Size(m)
}
func (m *EmptyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyReq.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyReq proto.InternalMessageInfo

type ServiceResp struct {
	RequestId            int64    `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status               int64    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceResp) Reset()         { *m = ServiceResp{} }
func (m *ServiceResp) String() string { return proto.CompactTextString(m) }
func (*ServiceResp) ProtoMessage()    {}
func (*ServiceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_7520252fb01eaf30, []int{1}
}

func (m *ServiceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceResp.Unmarshal(m, b)
}
func (m *ServiceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceResp.Marshal(b, m, deterministic)
}
func (m *ServiceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceResp.Merge(m, src)
}
func (m *ServiceResp) XXX_Size() int {
	return xxx_messageInfo_ServiceResp.Size(m)
}
func (m *ServiceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceResp.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceResp proto.InternalMessageInfo

func (m *ServiceResp) GetRequestId() int64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *ServiceResp) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ServiceResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type StartConfig struct {
	MemAlloc             int64    `protobuf:"varint,1,opt,name=mem_alloc,json=memAlloc,proto3" json:"mem_alloc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartConfig) Reset()         { *m = StartConfig{} }
func (m *StartConfig) String() string { return proto.CompactTextString(m) }
func (*StartConfig) ProtoMessage()    {}
func (*StartConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_7520252fb01eaf30, []int{2}
}

func (m *StartConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartConfig.Unmarshal(m, b)
}
func (m *StartConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartConfig.Marshal(b, m, deterministic)
}
func (m *StartConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartConfig.Merge(m, src)
}
func (m *StartConfig) XXX_Size() int {
	return xxx_messageInfo_StartConfig.Size(m)
}
func (m *StartConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_StartConfig.DiscardUnknown(m)
}

var xxx_messageInfo_StartConfig proto.InternalMessageInfo

func (m *StartConfig) GetMemAlloc() int64 {
	if m != nil {
		return m.MemAlloc
	}
	return 0
}

type StatusResp struct {
	ServerState          string   `protobuf:"bytes,1,opt,name=server_state,json=serverState,proto3" json:"server_state,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResp) Reset()         { *m = StatusResp{} }
func (m *StatusResp) String() string { return proto.CompactTextString(m) }
func (*StatusResp) ProtoMessage()    {}
func (*StatusResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_7520252fb01eaf30, []int{3}
}

func (m *StatusResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResp.Unmarshal(m, b)
}
func (m *StatusResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResp.Marshal(b, m, deterministic)
}
func (m *StatusResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResp.Merge(m, src)
}
func (m *StatusResp) XXX_Size() int {
	return xxx_messageInfo_StatusResp.Size(m)
}
func (m *StatusResp) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResp.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResp proto.InternalMessageInfo

func (m *StatusResp) GetServerState() string {
	if m != nil {
		return m.ServerState
	}
	return ""
}

func (m *StatusResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*EmptyReq)(nil), "services.EmptyReq")
	proto.RegisterType((*ServiceResp)(nil), "services.ServiceResp")
	proto.RegisterType((*StartConfig)(nil), "services.StartConfig")
	proto.RegisterType((*StatusResp)(nil), "services.StatusResp")
}

func init() { proto.RegisterFile("cmd.proto", fileDescriptor_7520252fb01eaf30) }

var fileDescriptor_7520252fb01eaf30 = []byte{
	// 267 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x51, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0x5e, 0x37, 0xad, 0xed, 0xab, 0x20, 0x3c, 0x54, 0x8a, 0x22, 0xcc, 0x9c, 0x86, 0x87, 0x1e,
	0x9c, 0xe0, 0x59, 0xc4, 0xc3, 0xc0, 0x53, 0x7a, 0xb7, 0xc4, 0xf6, 0x39, 0x0b, 0xcb, 0xd2, 0x25,
	0xa9, 0xe0, 0x1f, 0xe6, 0xff, 0x27, 0x4d, 0x53, 0xd6, 0x81, 0x1e, 0xdf, 0x97, 0xef, 0xbd, 0xef,
	0x47, 0x20, 0x2e, 0x65, 0x95, 0x35, 0x5a, 0x59, 0x85, 0x91, 0x21, 0xfd, 0x55, 0x97, 0x64, 0x18,
	0x40, 0xf4, 0x22, 0x1b, 0xfb, 0xcd, 0x69, 0xc7, 0xde, 0x20, 0xc9, 0x7b, 0x9c, 0x93, 0x69, 0xf0,
	0x06, 0x40, 0xd3, 0xae, 0x25, 0x63, 0x8b, 0xba, 0x4a, 0x83, 0x79, 0xb0, 0x98, 0xf1, 0xd8, 0x23,
	0xab, 0x0a, 0x2f, 0x21, 0x34, 0x56, 0xd8, 0xd6, 0xa4, 0x53, 0xf7, 0xe4, 0x27, 0x4c, 0xe1, 0x44,
	0x92, 0x31, 0x62, 0x4d, 0xe9, 0x6c, 0x1e, 0x2c, 0x62, 0x3e, 0x8c, 0xec, 0x0e, 0x92, 0xdc, 0x0a,
	0x6d, 0x9f, 0xd5, 0xf6, 0xa3, 0x5e, 0xe3, 0x35, 0xc4, 0x92, 0x64, 0x21, 0x36, 0x1b, 0x55, 0xfa,
	0xf3, 0x91, 0x24, 0xf9, 0xd4, 0xcd, 0x6c, 0x05, 0x90, 0xbb, 0x7b, 0xce, 0xca, 0x2d, 0x9c, 0x76,
	0x8e, 0x49, 0x17, 0x9d, 0x08, 0x39, 0x76, 0xcc, 0x93, 0x1e, 0xeb, 0x78, 0x34, 0x96, 0x9d, 0x1e,
	0xc8, 0xde, 0xff, 0x04, 0x70, 0xf6, 0x2a, 0xda, 0x6d, 0xf9, 0x49, 0xda, 0xe7, 0xc3, 0x47, 0x38,
	0x76, 0x56, 0xf0, 0x22, 0x1b, 0xaa, 0xc8, 0x46, 0xde, 0xae, 0xc6, 0xf0, 0xbe, 0x12, 0x36, 0xc1,
	0x25, 0x1c, 0xe5, 0x56, 0x35, 0x88, 0x7b, 0xc2, 0xd0, 0xdf, 0xff, 0x4b, 0x0f, 0x10, 0xf6, 0x61,
	0xfe, 0x5c, 0x3b, 0x3f, 0xb0, 0xe0, 0x23, 0xb3, 0xc9, 0x7b, 0xe8, 0xfe, 0x6a, 0xf9, 0x1b, 0x00,
	0x00, 0xff, 0xff, 0xf7, 0xc4, 0xc0, 0x55, 0xb8, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LauncherServiceClient is the client API for LauncherService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LauncherServiceClient interface {
	Start(ctx context.Context, in *StartConfig, opts ...grpc.CallOption) (*ServiceResp, error)
	Stop(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*ServiceResp, error)
	Status(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*StatusResp, error)
}

type launcherServiceClient struct {
	cc *grpc.ClientConn
}

func NewLauncherServiceClient(cc *grpc.ClientConn) LauncherServiceClient {
	return &launcherServiceClient{cc}
}

func (c *launcherServiceClient) Start(ctx context.Context, in *StartConfig, opts ...grpc.CallOption) (*ServiceResp, error) {
	out := new(ServiceResp)
	err := c.cc.Invoke(ctx, "/services.LauncherService/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *launcherServiceClient) Stop(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*ServiceResp, error) {
	out := new(ServiceResp)
	err := c.cc.Invoke(ctx, "/services.LauncherService/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *launcherServiceClient) Status(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*StatusResp, error) {
	out := new(StatusResp)
	err := c.cc.Invoke(ctx, "/services.LauncherService/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LauncherServiceServer is the server API for LauncherService service.
type LauncherServiceServer interface {
	Start(context.Context, *StartConfig) (*ServiceResp, error)
	Stop(context.Context, *EmptyReq) (*ServiceResp, error)
	Status(context.Context, *EmptyReq) (*StatusResp, error)
}

// UnimplementedLauncherServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLauncherServiceServer struct {
}

func (*UnimplementedLauncherServiceServer) Start(ctx context.Context, req *StartConfig) (*ServiceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}
func (*UnimplementedLauncherServiceServer) Stop(ctx context.Context, req *EmptyReq) (*ServiceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedLauncherServiceServer) Status(ctx context.Context, req *EmptyReq) (*StatusResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Status not implemented")
}

func RegisterLauncherServiceServer(s *grpc.Server, srv LauncherServiceServer) {
	s.RegisterService(&_LauncherService_serviceDesc, srv)
}

func _LauncherService_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LauncherServiceServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.LauncherService/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LauncherServiceServer).Start(ctx, req.(*StartConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _LauncherService_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LauncherServiceServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.LauncherService/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LauncherServiceServer).Stop(ctx, req.(*EmptyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LauncherService_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LauncherServiceServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.LauncherService/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LauncherServiceServer).Status(ctx, req.(*EmptyReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _LauncherService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.LauncherService",
	HandlerType: (*LauncherServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Start",
			Handler:    _LauncherService_Start_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _LauncherService_Stop_Handler,
		},
		{
			MethodName: "Status",
			Handler:    _LauncherService_Status_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cmd.proto",
}
